import{_ as i,c as s,o as a,ag as t}from"./chunks/framework.BF2kbpUJ.js";const k=JSON.parse('{"title":"Reviews","description":"","frontmatter":{},"headers":[],"relativePath":"guide/usage/reviews.md","filePath":"guide/usage/reviews.md","lastUpdated":1747826397000}'),n={name:"guide/usage/reviews.md"};function l(h,e,r,o,p,d){return a(),s("div",null,e[0]||(e[0]=[t(`<h1 id="reviews" tabindex="-1">Reviews <a class="header-anchor" href="#reviews" aria-label="Permalink to &quot;Reviews&quot;">​</a></h1><p>Reviews can be added for a Course or Instructor.</p><p>A Review needs at least a star rating (1-5 stars). It can have an optional title and description.</p><p>Reviews can be disabled completely via October&#39;s backend settings.</p><h2 id="review-categories" tabindex="-1">Review categories <a class="header-anchor" href="#review-categories" aria-label="Permalink to &quot;Review categories&quot;">​</a></h2><p>You can create additional review categories like <code>Price</code>, <code>Design</code> or <code>Quality</code> and assign them to specific course categories.</p><p>This allows a student to rate specific aspects of a course in more detail.</p><p>Review categories can be managed via the <code>Course Review Category</code> edit form.</p><h2 id="settings" tabindex="-1">Settings <a class="header-anchor" href="#settings" aria-label="Permalink to &quot;Settings&quot;">​</a></h2><p>The following settings can be configured in the backend:</p><h3 id="reviews-enabled" tabindex="-1">Reviews enabled <a class="header-anchor" href="#reviews-enabled" aria-label="Permalink to &quot;Reviews enabled&quot;">​</a></h3><p>This option removes the reviews form and list from the Product component if disabled.</p><h3 id="moderate-reviews" tabindex="-1">Moderate reviews <a class="header-anchor" href="#moderate-reviews" aria-label="Permalink to &quot;Moderate reviews&quot;">​</a></h3><p>If this option is enabled, reviews need to be approved by the site admin manually. Unapproved reviews are not visible on the website.</p><h3 id="allow-anonymous" tabindex="-1">Allow anonymous <a class="header-anchor" href="#allow-anonymous" aria-label="Permalink to &quot;Allow anonymous&quot;">​</a></h3><p>By default, only logged in students can create reviews.</p><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><p>See <a href="/skillup-docs/development/core/events.html#Review">Events</a>.</p><h2 id="using-in-your-plugin" tabindex="-1">Using in your plugin <a class="header-anchor" href="#using-in-your-plugin" aria-label="Permalink to &quot;Using in your plugin&quot;">​</a></h2><p>Your model class will declare a <code>morphMany</code> relationships such as</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $morphMany </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;reviews&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Review</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;reviewable&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><p>Then, your model class needs to useL</p><ul><li>the interface <code>implements \\Voilaah\\Reviews\\Classes\\Interface\\ReviewableContract</code></li><li>the trait <code>use \\Voilaah\\Reviews\\Classes\\Traits\\ReviewableTrait;</code></li></ul><p>Your class will then implement the two required methods <code>getReviewedType</code> and <code>getReviewedTitle</code>.</p><p>Example:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Return the type of reviewed model</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * /</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">public function getReviewedType(): string</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    return &#39;Instructor&#39;;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">}</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Return the name of the instructor</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * /</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">public function getReviewedTitle(): string</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    return $this-&gt;name;</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">}</span></span></code></pre></div>`,26)]))}const g=i(n,[["render",l]]);export{k as __pageData,g as default};
